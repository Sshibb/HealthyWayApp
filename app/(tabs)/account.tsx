import React, { useState } from 'react';
import {
  View,
  Text,
  TouchableOpacity,
  StyleSheet,
  ScrollView,
  Alert,
  Image,
} from 'react-native';
import { SafeAreaView } from 'react-native-safe-area-context';
import { Ionicons } from '@expo/vector-icons';

// –õ–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è (–ø–æ–∫–∞ –±–µ–∑ –±—ç–∫–µ–Ω–¥–∞)
const Account: React.FC = () => {
  const [user, setUser] = useState({
    name: '–û–ª–µ–≥ –®–∏–±–∞–µ–≤',
    email: 'oleg@example.com',
    avatar: 'https://via.placeholder.com/150',
    joinDate: '12 —è–Ω–≤–∞—Ä—è 2024',
    streak: 15, // –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥
    totalWater: 320, // –ª–∏—Ç—Ä–æ–≤ –≤—Å–µ–≥–æ
    totalSleep: 120, // –Ω–æ—á–µ–π
    totalMoodLogs: 45, // –∑–∞–ø–∏—Å–µ–π –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è
  });

  const [isEditing, setIsEditing] = useState(false);
  const [editedName, setEditedName] = useState(user.name);

  // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ä–µ–∂–∏–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  const toggleEdit = () => {
    if (isEditing) {
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
      setUser((prev) => ({ ...prev, name: editedName }));
      Alert.alert('‚úÖ –£—Å–ø–µ—à–Ω–æ', '–ò–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–æ!');
    }
    setIsEditing(!isEditing);
  };

  // –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Å–º–µ–Ω—ã –∞–≤–∞—Ç–∞—Ä–∞
  const changeAvatar = () => {
    Alert.alert('üì∑ –°–º–µ–Ω–∞ –∞–≤–∞—Ç–∞—Ä–∞', '–§—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏');
  };

  // –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –≤—ã—Ö–æ–¥–∞
  const handleLogout = () => {
    Alert.alert(
      'üö™ –í—ã–π—Ç–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞',
      '–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–π—Ç–∏?',
      [
        { text: '–û—Ç–º–µ–Ω–∞', style: 'cancel' },
        { text: '–í—ã–π—Ç–∏', style: 'destructive' },
      ]
    );
  };

  return (
    <SafeAreaView style={styles.container}>
      <ScrollView contentContainerStyle={styles.scrollContent}>
        {/* –®–∞–ø–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è */}
        <View style={styles.header}>
          <TouchableOpacity onPress={changeAvatar}>
            <Image source={{ uri: user.avatar }} style={styles.avatar} />
            <View style={styles.editIcon}>
              <Ionicons name="camera" size={16} color="#fff" />
            </View>
          </TouchableOpacity>

          <View style={styles.nameContainer}>
            {isEditing ? (
              <View style={styles.inputRow}>
                <TextInput
                  style={styles.input}
                  value={editedName}
                  onChangeText={setEditedName}
                  placeholder="–í–≤–µ–¥–∏—Ç–µ –∏–º—è"
                />
                <TouchableOpacity onPress={toggleEdit} style={styles.saveButton}>
                  <Ionicons name="checkmark" size={20} color="#4CAF50" />
                </TouchableOpacity>
              </View>
            ) : (
              <>
                <Text style={styles.name}>{user.name}</Text>
                <TouchableOpacity onPress={toggleEdit}>
                  <Text style={styles.editText}>‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</Text>
                </TouchableOpacity>
              </>
            )}
          </View>
        </View>

        {/* Email –∏ –¥–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ */}
        <View style={styles.infoCard}>
          <View style={styles.infoRow}>
            <Ionicons name="mail" size={20} color="#666" />
            <Text style={styles.infoText}>{user.email}</Text>
          </View>
          <View style={styles.infoRow}>
            <Ionicons name="calendar" size={20} color="#666" />
            <Text style={styles.infoText}>–í –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ —Å {user.joinDate}</Text>
          </View>
        </View>

        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
        <View style={styles.statsSection}>
          <Text style={styles.sectionTitle}>üìä –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</Text>
          <View style={styles.statsGrid}>
            <View style={styles.statCard}>
              <Ionicons name="flame" size={24} color="#FF5722" />
              <Text style={styles.statNumber}>{user.streak}</Text>
              <Text style={styles.statLabel}>–¥–Ω–µ–π –ø–æ–¥—Ä—è–¥</Text>
            </View>
            <View style={styles.statCard}>
              <Ionicons name="water" size={24} color="#2196F3" />
              <Text style={styles.statNumber}>{user.totalWater}</Text>
              <Text style={styles.statLabel}>–ª –≤–æ–¥—ã</Text>
            </View>
            <View style={styles.statCard}>
              <Ionicons name="bed" size={24} color="#9C27B0" />
              <Text style={styles.statNumber}>{user.totalSleep}</Text>
              <Text style={styles.statLabel}>–Ω–æ—á–µ–π</Text>
            </View>
            <View style={styles.statCard}>
              <Ionicons name="happy" size={24} color="#FF9800" />
              <Text style={styles.statNumber}>{user.totalMoodLogs}</Text>
              <Text style={styles.statLabel}>–∑–∞–ø–∏—Å–µ–π</Text>
            </View>
          </View>
        </View>

        {/* –ù–∞—Å—Ç—Ä–æ–π–∫–∏ */}
        <View style={styles.settingsSection}>
          <Text style={styles.sectionTitle}>‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏</Text>
          <TouchableOpacity style={styles.settingItem}>
            <Text style={styles.settingText}>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</Text>
            <Ionicons name="chevron-forward" size={20} color="#aaa" />
          </TouchableOpacity>
          <TouchableOpacity style={styles.settingItem}>
            <Text style={styles.settingText}>–¢–µ–º–∞ (—Å–≤–µ—Ç–ª–∞—è/—Ç—ë–º–Ω–∞—è)</Text>
            <Ionicons name="chevron-forward" size={20} color="#aaa" />
          </TouchableOpacity>
          <TouchableOpacity style={styles.settingItem}>
            <Text style={styles.settingText}>–†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ</Text>
            <Ionicons name="chevron-forward" size={20} color="#aaa" />
          </TouchableOpacity>
          <TouchableOpacity style={styles.settingItem}>
            <Text style={styles.settingText}>–û –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏</Text>
            <Ionicons name="chevron-forward" size={20} color="#aaa" />
          </TouchableOpacity>
        </View>

        {/* –ö–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞ */}
        <TouchableOpacity style={styles.logoutButton} onPress={handleLogout}>
          <Text style={styles.logoutText}>üö™ –í—ã–π—Ç–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞</Text>
        </TouchableOpacity>
      </ScrollView>
    </SafeAreaView>
  );
};

// –ò–º–ø–æ—Ä—Ç TextInput –æ—Ç–¥–µ–ª—å–Ω–æ
import { TextInput } from 'react-native';

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#f8f9fa',
  },
  scrollContent: {
    padding: 20,
    alignItems: 'center',
  },
  header: {
    width: '100%',
    alignItems: 'center',
    marginBottom: 30,
    paddingTop: 20,
  },
  avatar: {
    width: 120,
    height: 120,
    borderRadius: 60,
    borderWidth: 4,
    borderColor: '#fff',
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 3,
  },
  editIcon: {
    position: 'absolute',
    bottom: 8,
    right: 8,
    backgroundColor: '#6200EE',
    width: 32,
    height: 32,
    borderRadius: 16,
    justifyContent: 'center',
    alignItems: 'center',
  },
  nameContainer: {
    marginTop: 20,
    alignItems: 'center',
  },
  name: {
    fontSize: 28,
    fontWeight: 'bold',
    color: '#333',
    marginBottom: 8,
  },
  editText: {
    fontSize: 16,
    color: '#6200EE',
    fontWeight: '500',
  },
  inputRow: {
    flexDirection: 'row',
    alignItems: 'center',
    gap: 10,
  },
  input: {
    fontSize: 20,
    fontWeight: '500',
    color: '#333',
    borderBottomWidth: 2,
    borderBottomColor: '#6200EE',
    minWidth: 200,
    padding: 4,
  },
  saveButton: {
    padding: 8,
  },
  infoCard: {
    width: '100%',
    backgroundColor: '#fff',
    padding: 20,
    borderRadius: 20,
    marginBottom: 30,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.05,
    shadowRadius: 4,
    elevation: 3,
  },
  infoRow: {
    flexDirection: 'row',
    alignItems: 'center',
    gap: 12,
    marginBottom: 12,
  },
  infoText: {
    fontSize: 16,
    color: '#333',
  },
  statsSection: {
    width: '100%',
    marginBottom: 30,
  },
  sectionTitle: {
    fontSize: 20,
    fontWeight: '600',
    color: '#333',
    marginBottom: 20,
    textAlign: 'center',
  },
  statsGrid: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    justifyContent: 'space-between',
    gap: 16,
  },
  statCard: {
    width: '48%',
    backgroundColor: '#fff',
    padding: 20,
    borderRadius: 16,
    alignItems: 'center',
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 1 },
    shadowOpacity: 0.05,
    shadowRadius: 2,
    elevation: 2,
  },
  statNumber: {
    fontSize: 28,
    fontWeight: 'bold',
    color: '#333',
    marginVertical: 8,
  },
  statLabel: {
    fontSize: 14,
    color: '#666',
    textAlign: 'center',
  },
  settingsSection: {
    width: '100%',
    backgroundColor: '#fff',
    padding: 20,
    borderRadius: 20,
    marginBottom: 30,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.05,
    shadowRadius: 4,
    elevation: 3,
  },
  settingItem: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    paddingVertical: 16,
    borderBottomWidth: 1,
    borderBottomColor: '#eee',
  },
  settingText: {
    fontSize: 16,
    color: '#333',
  },
  logoutButton: {
    width: '100%',
    paddingVertical: 16,
    backgroundColor: '#f44336',
    borderRadius: 20,
    alignItems: 'center',
  },
  logoutText: {
    color: '#fff',
    fontSize: 16,
    fontWeight: '600',
  },
});

export default Account;